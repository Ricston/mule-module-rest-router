<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:rest-router="http://www.mulesoft.org/schema/mule/rest-router"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/rest-router http://www.mulesoft.org/schema/mule/rest-router/1.0/mule-rest-router.xsd">

    <rest-router:config/>

    <flow name="basicTest">
        <!-- BEGIN_INCLUDE(rest-router:router) -->
        <rest-router:router templateUri="http://{userid}.blog.com/comments/{title}/feed">
            <rest-router:get>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Retrieving comment on #[variable:title] for user #[variable:userid]"/>
                </expression-transformer>
            </rest-router:get>
            <rest-router:put>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Creating comment on #[variable:title] for user #[variable:userid]"/>
                </expression-transformer>
            </rest-router:put>
            <rest-router:post>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Updating comment on #[variable:title] for user #[variable:userid]"/>
                </expression-transformer>
            </rest-router:post>
            <rest-router:delete>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Deleting comment on #[variable:title] for user #[variable:userid]"/>
                </expression-transformer>
            </rest-router:delete>
        </rest-router:router>
        <!-- END_INCLUDE(rest-router:router) -->
    </flow>
    
    <flow name="uriMatching">
    	<!-- do not include domain nor protocol, just the path -->
        <rest-router:router templateUri="/{domain}/menu">
            <rest-router:get>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Retrieving Administration menu for domain #[variable:domain]"/>
                </expression-transformer>
            </rest-router:get>
        </rest-router:router>
        <rest-router:router templateUri="/{domain}/{lookup}">
            <rest-router:get> 
                <expression-transformer>
                    <return-argument evaluator="string" expression="Retrieving #[variable:lookup] lookup table for domain #[variable:domain]"/>
                </expression-transformer>
            </rest-router:get>
        </rest-router:router>
        <rest-router:router templateUri="/{domain}/{lookup}/{entryID}">
            <rest-router:get>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Getting entry with ID: #[variable:entryID] from #[variable:lookup] lookup table for domain #[variable:domain]"/>
                </expression-transformer>
            </rest-router:get>
        </rest-router:router> 
    </flow>
    
    <flow name="basicTransformation">
    	<!-- BEGIN_INCLUDE(rest-router:router) -->
        <rest-router:router templateUri="http://{userid}.blog.com/users" 
        		getProduces="application/json" 
        		consumesClass="org.mule.modules.entity.Person"
        		putConsumes="application/json" 
        		postConsumes="application/json">
            <rest-router:get>
                <expression-transformer expression="return new org.mule.modules.entity.Person(&quot;Alan&quot;, &quot;Cassar&quot;);" />
            </rest-router:get>
            <rest-router:put>
                <logger message="PUT: #[payload]" level="INFO"/>
            </rest-router:put>
            <rest-router:post>
                <logger message="POST: #[payload]" level="INFO"/>
            </rest-router:post>
            <rest-router:delete>
                <expression-transformer>
                    <return-argument evaluator="string" expression="Deleting comment on #[variable:title] for user #[variable:userid]"/>
                </expression-transformer>
            </rest-router:delete>
        </rest-router:router>
        <!-- END_INCLUDE(rest-router:router) -->
    </flow>

</mule>
